<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="3.12.2@7c7ebd068f8acaba211d4a2c707c4ba90874fa26">
  <file src="src/RetryStrategyBuilder.php">
    <DocblockTypeContradiction occurrences="1">
      <code>false === is_array($exceptionClasses)</code>
    </DocblockTypeContradiction>
    <MixedArgument occurrences="4">
      <code>$exceptionClass</code>
      <code>$exceptionClass</code>
      <code>$exceptionClass</code>
      <code>$exceptionClass</code>
    </MixedArgument>
    <MixedArrayOffset occurrences="4">
      <code>$this-&gt;strategies[$exceptionClass]</code>
      <code>$this-&gt;middleHandlers[$exceptionClass]</code>
      <code>$this-&gt;strategies[$exceptionClass]</code>
      <code>$this-&gt;finalHandlers[$exceptionClass]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="3">
      <code>$exceptionClass</code>
      <code>$exceptionClass</code>
      <code>$exceptionClass</code>
    </MixedAssignment>
    <PossiblyInvalidIterator occurrences="3">
      <code>$exceptionClasses</code>
      <code>$exceptionClasses</code>
      <code>$exceptionClasses</code>
    </PossiblyInvalidIterator>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>is_array($exceptionClasses)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Strategy/AbstractStrategy.php">
    <InvalidReturnStatement occurrences="1">
      <code>$timeUnit</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>bool</code>
    </InvalidReturnType>
    <MissingReturnType occurrences="1">
      <code>jsonSerialize</code>
    </MissingReturnType>
    <MixedInferredReturnType occurrences="1">
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$this::STRATEGY</code>
    </MixedReturnStatement>
    <PropertyNotSetInConstructor occurrences="2">
      <code>$incrementBy</code>
      <code>$timeUnit</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Strategy/ConstantStrategy.php">
    <InvalidOperand occurrences="1">
      <code>$this-&gt;waitFor()</code>
    </InvalidOperand>
  </file>
  <file src="src/Strategy/ExponentialStrategy.php">
    <InvalidOperand occurrences="2">
      <code>$this-&gt;waitFor()</code>
      <code>pow($this-&gt;getExponentialBase(), $this-&gt;getAttempts()) * $this-&gt;getIncrementBy()</code>
    </InvalidOperand>
    <InvalidScalarArgument occurrences="1">
      <code>$incrementBy</code>
    </InvalidScalarArgument>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$exponentialBase</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Strategy/LinearStrategy.php">
    <InvalidOperand occurrences="1">
      <code>$this-&gt;waitFor()</code>
    </InvalidOperand>
  </file>
  <file src="src/Strategy/TimeFixedStrategy.php">
    <DocblockTypeContradiction occurrences="1">
      <code>false === is_int($endOfTimeWindow) &amp;&amp; false === $endOfTimeWindow instanceof \DateTime</code>
    </DocblockTypeContradiction>
    <InvalidReturnStatement occurrences="1">
      <code>ceil($seconds / $maxAttempts)</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>int</code>
    </InvalidReturnType>
    <InvalidScalarArgument occurrences="1">
      <code>$incrementBy</code>
    </InvalidScalarArgument>
    <PossiblyNullArgument occurrences="1">
      <code>$timeUnit</code>
    </PossiblyNullArgument>
  </file>
  <file src="src/TryAgain.php">
    <MixedAssignment occurrences="1">
      <code>$result</code>
    </MixedAssignment>
    <MixedFunctionCall occurrences="2">
      <code>call_user_func($this-&gt;finalHandlers[$exception], $e)</code>
      <code>call_user_func($this-&gt;middleHandlers[$exception], $e)</code>
    </MixedFunctionCall>
  </file>
</files>
